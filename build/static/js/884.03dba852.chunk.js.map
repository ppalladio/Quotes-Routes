{"version":3,"file":"static/js/884.03dba852.chunk.js","mappings":"4LACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCuEnI,EAlEkB,SAACH,GACf,IAAMI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAarB,OAAoCE,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAQhC,OACI,iCACI,SAAC,KAAM,CACHC,KAAMF,EACNG,QAAS,SAACC,GACN,MAAO,mBACX,KAEJ,SAAC,EAAI,WACD,kBACIC,QAbS,WACrBJ,GAAc,EAClB,EAYgBR,UAAWC,EACXY,SA/BhB,SAA2BC,GACvBA,EAAMC,iBAEN,IAAMC,EAAgBb,EAAec,QAAQC,MACvCC,EAAcd,EAAaY,QAAQC,MAIzCnB,EAAMqB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACpD,EAsB4C,UAE3BpB,EAAMwB,YACH,gBAAKvB,UAAWC,EAAgB,UAC5B,SAACuB,EAAA,EAAc,OAIvB,iBAAKxB,UAAWC,EAAgB,WAC5B,kBAAOwB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,QAExC,iBAAKH,UAAWC,EAAgB,WAC5B,kBAAOwB,QAAQ,OAAM,mBACrB,qBACIE,GAAG,OACHE,KAAK,IACLD,IAAKvB,QAGb,gBAAKL,UAAWC,EAAgB,UAC5B,mBAAQ6B,QAvCE,WAC1BtB,GAAc,EAClB,EAqC4DR,UAAU,MAAK,gCAQ/E,E,kBC1CA,EAvBiB,WACb,OAAgC+B,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACfC,GAAUC,EAAAA,EAAAA,OAChBC,EAAAA,EAAAA,YAAU,WACS,cAAXH,GACAC,EAAQG,KAAK,UAErB,GAAG,CAACJ,EAAQC,IAOZ,OACI,SAAC,EAAS,CACNZ,UAAsB,YAAXW,EACXd,WARgB,SAACmB,GACrBN,EAAYM,GACZJ,EAAQG,KAAK,UAEjB,GAQJ,C","sources":["webpack://quote-routes/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://quote-routes/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__XRejf\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__s39T4\",\"loading\":\"QuoteForm_loading__zJ6ME\",\"control\":\"QuoteForm_control__e8ACI\",\"actions\":\"QuoteForm_actions__OreKo\"};","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n    const authorInputRef = useRef();\n    const textInputRef = useRef();\n\n    function submitFormHandler(event) {\n        event.preventDefault();\n\n        const enteredAuthor = authorInputRef.current.value;\n        const enteredText = textInputRef.current.value;\n\n        // optional: Could validate here\n\n        props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    }\n\n    const [isEntering, setIsEntering] = useState(false);\n\n    const finishEnteringHandler = () => {\n        setIsEntering(false);\n    };\n    const formFocushandler = () => {\n        setIsEntering(true);\n    };\n    return (\n        <>\n            <Prompt\n                when={isEntering}\n                message={(location) => {\n                    return 'leaving the page?';\n                }}\n            />\n            <Card>\n                <form\n                    onFocus={formFocushandler}\n                    className={classes.form}\n                    onSubmit={submitFormHandler}\n                >\n                    {props.isLoading && (\n                        <div className={classes.loading}>\n                            <LoadingSpinner />\n                        </div>\n                    )}\n\n                    <div className={classes.control}>\n                        <label htmlFor=\"author\">Author</label>\n                        <input type=\"text\" id=\"author\" ref={authorInputRef} />\n                    </div>\n                    <div className={classes.control}>\n                        <label htmlFor=\"text\">Text</label>\n                        <textarea\n                            id=\"text\"\n                            rows=\"5\"\n                            ref={textInputRef}\n                        ></textarea>\n                    </div>\n                    <div className={classes.actions}>\n                        <button onClick={finishEnteringHandler} className=\"btn\">\n                            Add Quote\n                        </button>\n                    </div>\n                </form>\n            </Card>\n        </>\n    );\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\nconst NewQuote = () => {\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = (quoteData) => {\r\n        sendRequest(quoteData);\r\n        history.push('/quotes');\r\n        // ' push allows users to go back to previous page, replace doesnt.\r\n    };\r\n    return (\r\n        <QuoteForm\r\n            isLoading={status === 'pending'}\r\n            onAddQuote={addQuoteHandler}\r\n        />\r\n        //.'show loading spinner' */}\r\n    );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"names":["props","className","classes","children","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","message","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}